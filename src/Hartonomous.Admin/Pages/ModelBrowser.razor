@page "/models"
@inject AdminOperationService OperationService

<h1>Model Catalog</h1>

@if (_loading)
{
    <p>Loading models…</p>
}
else if (_models.Count == 0)
{
    <p>No models have been ingested yet.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Type</th>
                <th>Architecture</th>
                <th>Ingested</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var model in _models)
            {
                <tr>
                    <td>@model.ModelId</td>
                    <td>@model.ModelName</td>
                    <td>@model.ModelType</td>
                    <td>@model.Architecture</td>
                    <td>@FormatIngestion(model.IngestionDate)</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Model> _models = new();
    private bool _loading;

    protected override async Task OnInitializedAsync()
    {
        _loading = true;

        try
        {
            var models = await OperationService.GetModelsAsync();
            _models = models.OrderByDescending(m => m.IngestionDate).ToList();
        }
        finally
        {
            _loading = false;
        }
    }

    private static string FormatIngestion(DateTime? ingestionDate)
    {
        return ingestionDate.HasValue
            ? ingestionDate.Value.ToLocalTime().ToString("g")
            : "—";
    }
}
